import { prog } from './_';
import { paths } from '../../constants';
import { createProgressEstimator } from '../../createProgressEstimator';
import { tsdxDtsBundleGeneratorAsync } from '../../plugin/rollupDtsBundleGenerator';

prog
	.command('dts')
	.describe('Run DTS Bundle Generator')
	.option('-o', 'File name of generated d.ts')
	.option('--no-banner', 'Allows remove "Generated by dts-bundle-generator" comment from the output')
	.option('--no-check', 'Skip validation of generated d.ts file')
	.option('--inline-declare-global', 'Enables inlining of `declare global` statements contained in file which should be inlined', true)
	.option('--inline-declare-externals', 'Enables inlining of `declare module` statements of the global modules', false)
	.action(
		async (opts: {
			o: string;
			_: string[];
			'no-banner'?: boolean,
			'no-check'?: boolean,
		}) =>
		{
			console.log('Run DTS Bundle Generator');
			console.log(paths.appRoot);

			opts['outputFile'] = opts.o;

			const logger = await createProgressEstimator();

			let p = tsdxDtsBundleGeneratorAsync(opts._?.[0], opts)

			await logger(p, `Creating DTS Bundle`);

			return
		}
	);
